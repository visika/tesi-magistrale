:: initializing oneAPI environment ...
   BASH version = 4.2.46(2)-release
:: dev-utilities -- latest
:: tbb -- latest
:: compiler -- latest
:: dpl -- latest
:: mkl -- latest
:: ipp -- latest
:: mpi -- latest
:: ccl -- latest
:: vtune -- latest
:: dpcpp-ct -- latest
:: dal -- latest
:: intelpython -- latest
:: ippcp -- latest
:: debugger -- latest
:: inspector -- latest
:: clck -- latest
:: itac -- latest
:: oneAPI environment initialized ::
     using /nfsexports/SOFTWARE/intel/oneapi/mpi/2021.1.1/bin/mpirun
Using Python 3.11.7
/ibiscostorage/mmollo/02_water/02_dimer/11_binding_energy/binding_energy.py:7: DeprecationWarning: 
Pyarrow will become a required dependency of pandas in the next major release of pandas (pandas 3.0),
(to allow more performant data types, such as the Arrow string type, and better interoperability with other libraries)
but was not found to be installed on your system.
If this would cause problems for you,
please provide us feedback at https://github.com/pandas-dev/pandas/issues/54466
        
  import pandas as pd
/lustre/home/mmollo/miniconda3/envs/mace_env/lib/python3.11/site-packages/torch/overrides.py:110: UserWarning: 'has_cuda' is deprecated, please use 'torch.backends.cuda.is_built()'
  torch.has_cuda,
/lustre/home/mmollo/miniconda3/envs/mace_env/lib/python3.11/site-packages/torch/overrides.py:111: UserWarning: 'has_cudnn' is deprecated, please use 'torch.backends.cudnn.is_available()'
  torch.has_cudnn,
/lustre/home/mmollo/miniconda3/envs/mace_env/lib/python3.11/site-packages/torch/overrides.py:117: UserWarning: 'has_mps' is deprecated, please use 'torch.backends.mps.is_built()'
  torch.has_mps,
/lustre/home/mmollo/miniconda3/envs/mace_env/lib/python3.11/site-packages/torch/overrides.py:118: UserWarning: 'has_mkldnn' is deprecated, please use 'torch.backends.mkldnn.is_available()'
  torch.has_mkldnn,
Using Materials Project MACE for MACECalculator with /lustre/home/mmollo/.cache/mace/5yyxdm76
Using float64 for MACECalculator, which is slower but more accurate. Recommended for geometry optimization.
Using TorchDFTD3Calculator for D3 dispersion corrections (see https://github.com/pfnet-research/torch-dftd)
FINISHED!!!
